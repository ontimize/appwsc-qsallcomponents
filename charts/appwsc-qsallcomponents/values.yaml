# This is a YAML-formatted file.

# Deployment configuration
replicaCount: 1
image:
  pullPolicy: IfNotPresent
  ## provided as basic setup. replace as needed
  repository: ghcr.io/ontimize/appwsc-qsallcomponents
  version: internal-configure-argocd-deployment
imagePullSecrets:
  - name: github-ecr-cred
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}
# Add labels to the pods
podsLabels: {}
# Add labels to the deployment
deploymentLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
## liveness/readiness probes. standard ontimize endpoints
probePath: /ontimize/health
probePort: 8081
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 1
  ### Optional distinct liveness probe path, if empty the probePath is used
  probePath: /index.html
readinessProbe:
  initialDelaySeconds: 70
  failureThreshold: 3
  periodSeconds: 15
  successThreshold: 1
  timeoutSeconds: 1
  ### Optional distinct readiness probe path, if empty the probePath is used
  probePath: /ontimize/health/readiness
## Adapt resources if needed
resources:
  limits:
    cpu: 400m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

## Be sure to set API key in secret *******-grafana-api-key, key apiKey
grafana:
  enabled: false

# Optional configmap.
configmap:
  enabled: false
  data:


# Service configuration. Annotations are used by cert-manager to generate certificates using cluster-issuer
service:
  name: appwsc-qsallcomponent-jee-server
  type: ClusterIP
  externalPort: 9091
  internalPort: 8080
ingress:
  enabled: false
#  annotations:
#    kubernetes.io/ingress.class: nginx
#    kubernetes.io/tls-acme: "true"
#    cert-manager.io/cluster-issuer: cert-manager-letsencrypt-production-route53
#  host: appwsc-qsallcomponent.ontimize.com
#  tls:
#    secretName: appwsc-qsallcomponent-tls
#    enabled: true

# Kafka. If used. Will be provided as environment variables to the pods.
kafka:
  enabled: false

s3:
  enabled: false
